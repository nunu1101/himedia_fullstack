<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xmlmapper.ElementTestMapper">

    <!--
        1. DB에서 조회한 결과 데이터를 객체에 로드하는 방법을 정의하는 엘리먼트이다.
        2. resultMap 엘리먼트는 Mybatis에서 가장 중요하고 강력한 엘리먼트이다.
        3. ResultSet에서 데이터를 가져올 때 작성되는 JDBC 코드는 줄여주는 역할을 한다.
           실제로 join 매핑과 같은 복잡한 코드는 굉장히 많은 코드가 필요한데,
           ResultMap은 간단한 구문에서는 매핑이 필요하지 않고 복잡한 구문에서 관계를 서술하기 위해 필요하다.

        < resultMap 엘리먼트 속성 >
        1. id : 매핑 구문에서 결과 매핑을 사용할 때 구분하기 위한 ID이다.
        2. type : 결과 매핑을 적용하는 대상 객체 타입(=매핑 구문의 결과 데이터를 저장할 Java 타입을 지정)을 의미한다.
        3. extends : 자바의 상속처럼 기존에 정의된 매핑 결과를 상속 받아 추가적인 매핑 정보를 확장할 때 사용한다.
        4. automapping : 결과 매핑을 자동 매핑을 할 것인지를 결정한다.
                         auto 매핑 설정은 동일한 컬럼명이 있는 경우 위험성을 가지기 때문에 사용하지 않는 것이 안전하다.
    -->
    <resultMap id="menuResultMap1" type="com.ohgiraffers.common.MenuDTO" autoMapping="false">
        <result property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
    </resultMap>

    <resultMap id="menuResultMap2" type="com.ohgiraffers.common.MenuDTO" extends="menuResultMap1">
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <select id="selectResultMapTest" resultMap="menuResultMap2">
        SELECT
                A.MENU_CODE
            ,   A.MENU_NAME
            ,   A.MENU_PRICE
            ,   A.CATEGORY_CODE
            ,   A.ORDERABLE_STATUS
            FROM TBL_MENU A
            WHERE A.ORDERABLE_STATUS = 'Y'
    </select>

    <!-- <resultMap> 의 하위 엘리먼트
         <id> : primary key 컬럼을 매핑하기 위한 태그이다. (성능 향상)
         <result> : pk가 아닌 일반 컬럼에 매핑하기 위한 태그이다.
         <constructor> : 인스턴스화 되는 클래스의 생성자에 결과를 삽입하기 위해 사용한다. <idArg>, <arg> 하위 엘리먼트가 있다.
         <association> : 복잡한 타입의 연관관계로 1:1 포함관계인 경우 사용한다.
         <collection> : 복잡한 타입의 연관관계로 1:다 포함관계인 경우 사용한다.
    -->
    <resultMap id="menuResultMap3" type="com.ohgiraffers.common.MenuDTO">
        <constructor>
            <idArg column="MENU_CODE" javaType="_int"/>
            <arg column="MENU_NAME" javaType="string"/>
            <arg column="MENU_PRICE" javaType="_int"/>
            <arg column="CATEGORY_CODE" javaType="_int"/>
            <arg column="ORDERABLE_STATUS" javaType="string"/>
        </constructor>
    </resultMap>
    <select id="selectResultMapConstructorTest" resultMap="menuResultMap3">
        SELECT
                A.MENU_CODE
            ,   A.MENU_NAME
            ,   A.MENU_PRICE
            ,   A.CATEGORY_CODE
            ,   A.ORDERABLE_STATUS
            FROM TBL_MENU A
            WHERE A.ORDERABLE_STATUS = 'Y'
    </select>

    <!-- a. 따로 만든 resultMap을 사용하는 방법 -->
    <resultMap id="menuAndCategoryResultMap" type="com.ohgiraffers.common.MenuAndCategoryDTO">
        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
        <association property="category" resultMap="categoryResultMap"/>
    </resultMap>

    <resultMap id="categoryResultMap" type="com.ohgiraffers.common.CategoryDTO">
        <id property="categoryCode" column="CATEGORY_CODE"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
        <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>
    </resultMap>

    <!-- b. association 내에 id, result 작성하는 방법 -->
    <!--<resultMap id="menuAndCategoryResultMap" type="com.ohgiraffers.common.MenuAndCategoryDTO">
        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
        <association property="category" javaType="com.ohgiraffers.common.CategoryDTO">
            <id property="categoryCode" column="CATEGORY_CODE"/>
            <result property="categoryName" column="CATEGORY_NAME"/>
            <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>
        </association>
    </resultMap>-->

    <select id="selectResultMapAssociationTest" resultMap="menuAndCategoryResultMap">
        SELECT
                A.MENU_CODE
            ,   A.MENU_NAME
            ,   A.MENU_PRICE
            ,   B.CATEGORY_CODE
            ,   B.CATEGORY_NAME
            ,   B.REF_CATEGORY_CODE
            ,   A.ORDERABLE_STATUS
            FROM TBL_MENU A
            JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
            WHERE A.ORDERABLE_STATUS = 'Y'
    </select>

    <!-- a. 따로 만든 resultMap을 사용하는 방법 -->
    <resultMap id="categoryAndMenuResultMap" type="com.ohgiraffers.common.CategoryAndMenuDTO">
        <id property="categoryCode" column="CATEGORY_CODE"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
        <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>
        <collection property="menuList" resultMap="menuResultMap"/>
    </resultMap>

    <resultMap id="menuResultMap" type="com.ohgiraffers.common.MenuDTO">
        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <!-- b. collection 내에 id, result 작성하는 방법 -->
    <!--<resultMap id="categoryAndMenuResultMap" type="com.ohgiraffers.common.CategoryAndMenuDTO">
        <id property="categoryCode" column="CATEGORY_CODE"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
        <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>
        <collection property="menuList" ofType="com.ohgiraffers.common.MenuDTO">
            <id property="code" column="MENU_CODE"/>
            <result property="name" column="MENU_NAME"/>
            <result property="price" column="MENU_PRICE"/>
            <result property="categoryCode" column="CATEGORY_CODE"/>
            <result property="orderableStatus" column="ORDERABLE_STATUS"/>
        </collection>
    </resultMap>-->

    <select id="selectResultMapCollectionTest" resultMap="categoryAndMenuResultMap">
        SELECT
                A.CATEGORY_CODE
            ,   A.CATEGORY_NAME
            ,   A.REF_CATEGORY_CODE
            ,   B.MENU_CODE
            ,   B.MENU_NAME
            ,   B.MENU_PRICE
            ,   B.CATEGORY_CODE
            ,   B.ORDERABLE_STATUS
            FROM TBL_CATEGORY A
            LEFT JOIN TBL_MENU B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
            ORDER BY A.CATEGORY_CODE
    </select>
</mapper>